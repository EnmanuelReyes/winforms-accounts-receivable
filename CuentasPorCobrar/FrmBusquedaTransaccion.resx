<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CmdBuscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAAsSAAALEgHS3X78AAADrElEQVR4Xu1ZXW7TQBAuPMAR
        CuIFgTgDghKViluAQFWLqMQdSuAA+c8BonKDAqp4QkWUl6pUrbhFFfpAaQkiCt9XNpEzON517HVsMZVW
        SbO7M/N9npmdHc/N6Z8yoAwoA8qAMqAMKAPKgDKgDCgDKTNQrVavNhqNpxivm83mF4xuvV7/xcHv+H0P
        nxsYq+12+0rK6mcjbjAYXGi1WvcB6h1GH2PgMkDKb4y3IGWRMmZjfUKtAHALYN+7ALas2QIRNxOak+12
        AHoCAn6kAH7oMScg4VG2KKbQRncF6FcRwPcxt86wYE4ol8uXOEx+WALIF5g/iNhfznVITAIPYB8wt+DK
        KbznHtZvhxFBklzlZLqObh9i8Ckz/zRPjXuw9xnIOJNy4UEPMwVnU8aEJ2Me/3+r1Wq3bXtt8wB7BwQc
        B0mA7O8Imxu2vZnMm7iX2f40DfBDACRBegKPyUwA2pSYc37sfKfb2/bFnYcHrIWEWCmunNTXmyJnRAAT
        3jQxbzOMMvHUPwZJgK43tn1e53l8yQoPRt31pRS6SiIXsGKc96XPKpeuLtxy37opwQLjBYdC53ICkcm2
        motNMP7Xk0m07wb4siCgY9/laQUM4a1uRAAToidVI7Fw+QciDHZ965woH4Z0g8YwJ/g2plKpXBMecORb
        50T55i4/8gDW9b6NQdhdFgT0fOvMOwH9mRGQkxDozowA08YKFkFLvo2RSZCJ2LfOqCS4ISoz71dVkP4y
        T8fgqjDmwOfTMFfkr4L0FZ86I2WzeytLYTYzfBnEJqkgvD/TUphAeS0VRm37uAzhiL0IXZ+Erk1fZDvL
        DXkqA3ZynAU4LgTw57m8DpuGyJYoT8/YxHDEZl0G2QsYP3N1FQ5azb49jDsRT+g4DRIM+LGWGH7roeN0
        3cpclgvYt5cuatpYa9PkBMa8cfuxJz/UweMwS3xOumCcvKqeF0mmk1NyIcIcdYshCe+f12q5I8EYz5cb
        oe8AAeqQJLGa462OFxsOfudvBIQxds5PkpVrT2Dfnq1rm/Ex5ntRa3PnCYwX9u1DagSnt8My2zPhhZTA
        shOdv5xAIgCmxO4tX3nHeOJ8lb7JveK0kfeAYpBgKsZ5AFrG6ICMXXwe8TjDIFh2lthe64CslajytrCe
        4HSMOC5SEkCUkqAk/I0X9QQHEph8HdNLcZdFeQLmPhcXWQzLI0jYiSGm2EvDSMBvj4uNKqb1jHm6PT53
        /jvwMbnS5cqAMqAMKAPKgDKgDJwz8AdcDPGb9wsNXwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="CmdImprimir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAAsSAAALEgHS3X78AAADWklEQVR4Xu2bO2gUURSGE8VC
        IZ0i2+yTZQtFLFRQsbMQjQqKID4jCpaCqJDGRrQKsoWN2ihYxlJFUbBYttgnYuzSiJGI2IjRqAjxO3EX
        xuzsPHbu3rvJ3MCBIblzzn++ufecO48MDdkfSyAygVqtdqxarc7oNIkZWbgqB4gZwxY025gq/ZH9WAB2
        BtglYGuA5gIoBdcWwcjVW5UD2wVsF7BdwHYB2wXidC+QyWTuptPpWjKZTEgnMdkFRINoEU2qupqvn2w2
        +xpbSKVSadMARINoEU2+wlUNsADsDLBLwNaAFV0EaSl7sNFuRtt5O2gARJOXZvTuDtQEcHK+1VaktXga
        PThjug3m83lkeuts/z2Xy53xhcDgF0EdMu66OKzX60cqlcq0TpOYEpsLdiOoXmbJE08AhUJhhEG/gjps
        jbvqS7VPA0h+PKTW+UQisa6rHBweDelwcYlw3gzgpnUacT/2ohWNh7wAPOjF6TI75343AKug83mZJeNb
        qF3ymQXAcAcEKuTOGCTfXrLbOwCQ/FhcAJDn2bgD6HynELMZYAHYJbCUgF0C8eoCtgbEpQZ8Z2nPLTXu
        XU6qACC3zXcGwdjCv3TbxLUf2we6GQ1TBCH4DKer2T5v4rzNJk00iBa35xj9BFAEwpZB2TqLFqzoouce
        v5twsW2RloAEg+7WQQEgWroA6Ha3GK0LWAB2BmSKVN4CNjUgVtC+BAK1Fo2DtAKg+N3UmFugUGi6FaIo
        RyuCBLokqkql0ggfR0watsXH3MyAy9oAEOyEBG00GnkD3wb991l+s9lMixZq0elIAEjqYFAHjN0rQXkT
        tMsB4BPHU32wr16Q+SeNHaKFHeG+oPoZt99tXQ3LlYXkFT9j3EZxQPDDbXHA6HzSGmj1eg8ixkUfAAfE
        Q+tbIV/tJH9cgax/LhB3wSFunuMvqg2wv70A8I7wnLKEwjpC2LgTAGLndBgx/7TjchGuhdWtbDwibreE
        yJVfo8yxjyNijTqW3oSuuB1xoP/IcSXecfVrOoyYs46Z99AYAJJ9broNEv+pMQAEbwgAQLxiT7CB4/VR
        jIJ2KixQmXEmAXxoAfjGcnjM8WQUI5k3PQB4bwwAgn+GFdyH8T+MACiXy2tJph87v9A+RYsRCDboCiDw
        F7niteIWL8yUAAAAAElFTkSuQmCC
</value>
  </data>
</root>