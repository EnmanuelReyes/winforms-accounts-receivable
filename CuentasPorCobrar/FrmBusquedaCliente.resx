<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CmdBuscarCliente.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EAAACxABrSO9dQAAA6xJREFUeF7tWV1u00AQLjzAEQriBYE4A4ISlYpbgEBVi6jEHUrgAPnPAaJygwKq
        eEJFlJeqVK24RRX6QGkJIgrfVzaRMzjedex1bDGVVkmzuzPzfZ6ZnR3PzemfMqAMKAPKgDKgDCgDyoAy
        oAwoAykzUK1WrzYajacYr5vN5heMbr1e/8XB7/h9D58bGKvtdvtKyupnI24wGFxotVr3AeodRh9j4DJA
        ym+MtyBlkTJmY31CrQBwC2DfuwC2rNkCETcTmpPtdgB6AgJ+pAB+6DEnIOFRtiim0EZ3BehXEcD3MbfO
        sGBOKJfLlzhMflgCyBeYP4jYX851SEwCD2AfMLfgyim85x7Wb4cRQZJc5WS6jm4fYvApM/80T417sPcZ
        yDiTcuFBDzMFZ1PGhCdjHv9/q9Vqt217bfMAewcEHAdJgOzvCJsbtr2ZzJu4l9n+NA3wQwAkQXoCj8lM
        ANqUmHN+7Hyn29v2xZ2HB6yFhFgprpzU15siZ0QAE940MW8zjDLx1D8GSYCuN7Z9Xud5fMkKD0bd9aUU
        ukoiF7BinPelzyqXri7cct+6KcEC4wWHQudyApHJtpqLTTD+15NJtO8G+LIgoGPf5WkFDOGtbkQAE6In
        VSOxcPkHIgx2feucKB+GdIPGMCf4NqZSqVwTHnDkW+dE+eYuP/IA1vW+jUHYXRYE9HzrzDsB/ZkRkJMQ
        6M6MANPGChZBS76NkUmQidi3zqgkuCEqM+9XVZD+Mk/H4Kow5sDn0zBX5K+C9BWfOiNls3srS2E2M3wZ
        xCapILw/01KYQHktFUZt+7gM4Yi9CF2fhK5NX2Q7yw15KgN2cpwFOC4E8Oe5vA6bhsiWKE/P2MRwxGZd
        BtkLGD9zdRUOWs2+PYw7EU/oOA0SDPixlhh+66HjdN3KXJYL2LeXLmraWGvT5ATGvHH7sSc/1MHjMEt8
        TrpgnLyqnhdJppNTciHCHHWLIQnvn9dquSPBGM+XG6HvAAHqkCSxmuOtjhcbDn7nbwSEMXbOT5KVa09g
        356ta5vxMeZ7UWtz5wmMF/btQ2oEp7fDMtsz4YWUwLITnb+cQCIApsTuLV95x3jifJW+yb3itJH3gGKQ
        YCrGeQBaxuiAjF18HvE4wyBYdpbYXuuArJWo8rawnuB0jDguUhJAlJKgJPyNF/UEBxKYfB3TS3GXRXkC
        5j4XF1kMyyNI2IkhpthLw0jAb4+LjSqm9Yx5uj0+d/478DG50uXKgDKgDCgDyoAyoAycM/AHXAzxm/cL
        DV8AAAAASUVORK5CYII=
</value>
  </data>
</root>